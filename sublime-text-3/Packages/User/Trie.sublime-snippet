<snippet>
	<content><![CDATA[



class Trie
{
	const static int mx=${1:26};
	struct node
	{
		bool endmark;
		node *next[mx];
		node()
		{
			endmark=false;
			for(int i=0;i<mx;i++)next[i]=NULL;
		}
	}*root;

	void del(node* cur)
	{
	    for (int i = 0; i < mx; i++)
	        if (cur->next[i])
	            del(cur->next[i]);
	    delete (cur);
	}
 public:
	Trie()
	{
		root=new node();
	}
	~Trie()
	{
		del(root);
	}
	void insert(string s)
	{
		node *curr=root;
		for(int i=0;i<s.size();i++)
		{
			int k=s[i]-'${2:a}';
			if(curr->next[k]==NULL)
				curr->next[k]=new node();
			curr=curr->next[k];
		}
		curr->endmark=true;
	}
	bool search(string s)
	{
		node *curr=root;
		for(int i=0;i<s.size();i++)
		{
			int k=s[i]-'${2:a}';
			if(curr->next[k]==NULL)
				return false;
			curr=curr->next[k];
		}
		return curr->endmark;
	}
};





$3

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>TRIE</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
